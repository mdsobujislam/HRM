@model HRM.Models.EmployeeSeparation

@{
    ViewData["Title"] = "Employee Separation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-body">
                <form id="separationForm" asp-action="CreateEmployeeSeparation" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()

                    <input type="hidden" asp-for="Id" />

                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label asp-for="EmployeeId" class="form-label">Employee Name</label>
                            <input asp-for="EmployeeId" class="form-control" id="EmployeeId" type="text" autocomplete="off" />
                            <span asp-validation-for="EmployeeId" class="text-danger"></span>
                        </div>



                        <div class="col-md-4 mb-3">
                            <label asp-for="SeparationDate" class="form-label">Separation Date</label>
                            <input asp-for="SeparationDate" type="date" class="form-control" />
                            <span asp-validation-for="SeparationDate" class="text-danger"></span>
                        </div>

                        <div class="col-md-4 mb-3">
                            <label asp-for="SeparationReasonsId" class="form-label">Select Separation Reason</label>
                            <select asp-for="SeparationReasonsId" asp-items="ViewBag.SeparationReasonsList" class="form-control">
                                <option value="">-- Select Separation Reason --</option>
                            </select>
                            <span asp-validation-for="SeparationReasonsId" class="text-danger"></span>
                        </div>

                        <div class="col-md-4 mb-3">
                            <label class="form-label">Upload Documents</label>
                            <div id="fileInputs">
                                <!-- initial file input; server receives all inputs named PdfFiles -->
                                <div class="input-group mb-2 file-input-row">
                                    <input type="file" name="PdfFiles" class="form-control form-control-sm" accept=".pdf,.doc,.docx,.jpg,.png" />
                                    <span class="input-group-text" style="cursor:pointer;" onclick="removeFile(this)">
                                        <i class="fa fa-times text-danger"></i>
                                    </span>
                                </div>
                            </div>
                            <button type="button" class="btn btn-success btn-sm mt-1" onclick="addMoreFile()">
                                <i class="bi bi-file-earmark-plus"></i> Add More Files
                            </button>

                        </div>

                        <div class="col-md-12 mb-3">
                            <label asp-for="Remarks" class="form-label">Remarks</label>
                            <textarea asp-for="Remarks" id="Remarks" class="form-control"></textarea>
                            <span asp-validation-for="Remarks" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="d-flex">
                        <button type="submit" class="btn btn-primary btn-sm me-2" id="btnSave">
                            <i class="bi bi-check-circle"></i> <span id="modalSubmitText">Submit</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- ✅ Required Dependencies -->

    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script> *@

    <!-- ✅ Summernote (Bootstrap 5) -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-bs5.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-bs5.min.js"></script>


    



    <script>
        //Start Editor
        $(document).ready(function () {
            $('#Remarks').summernote({
                height: 250,
                placeholder: "Enter remarks here...",
                toolbar: [
                    ['style', ['style']],
                    ['font', ['fontname', 'fontsize', 'bold', 'italic', 'underline', 'strikethrough', 'clear']],
                    ['color', ['color']], // ✅ Extended color picker
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ],

                // ✅ Show more fonts
                fontNames: [
                    'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',
                    'Georgia', 'Impact', 'Tahoma', 'Times New Roman',
                    'Trebuchet MS', 'Verdana',
                    'Roboto', 'Poppins', 'Montserrat', 'Open Sans', 'Lato'
                ],
                fontNamesIgnoreCheck: [
                    'Roboto', 'Poppins', 'Montserrat', 'Open Sans', 'Lato'
                ],

                // ✅ Bigger color palette
                colors: [
                    // row 1
                    ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#FFFFFF'],
                    // row 2
                    ['#FF0000', '#FF9900', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9900FF'],
                    // row 3
                    ['#FFB6C1', '#FF69B4', '#FF1493', '#C71585', '#DB7093', '#8B0000', '#800000'],
                    // row 4
                    ['#FFA07A', '#FF8C00', '#FF4500', '#DC143C', '#FF6347', '#FFD700', '#ADFF2F'],
                    // row 5
                    ['#20B2AA', '#40E0D0', '#00CED1', '#4682B4', '#5F9EA0', '#1E90FF', '#4169E1'],
                    // row 6
                    ['#6A5ACD', '#7B68EE', '#8A2BE2', '#9932CC', '#BA55D3', '#DA70D6', '#D8BFD8']
                ],

                callbacks: {
                    onChange: function (contents) {
                        $('#Remarks').val(contents);
                    }
                }
            });

            // Sync before submit
            $('#separationForm').on('submit', function () {
                $('#Remarks').val($('#Remarks').summernote('code'));
            });
        });

        //End Editor



        // Dynamic file inputs
        function addMoreFile() {
            const fileDiv = document.getElementById("fileInputs");

            const wrapper = document.createElement("div");
            wrapper.className = "input-group mb-2 file-input-row";

            const input = document.createElement("input");
            input.type = "file";
            input.name = "PdfFiles"; // multiple inputs with same name => model binder will collect them
            input.className = "form-control form-control-sm";
            input.accept = ".pdf,.doc,.docx,.jpg,.png";

            const span = document.createElement("span");
            span.className = "input-group-text";
            span.style.cursor = "pointer";
            span.innerHTML = '<i class="fa fa-times text-danger"></i>';
            span.onclick = function () { removeFile(span); };

            wrapper.appendChild(input);
            wrapper.appendChild(span);

            fileDiv.appendChild(wrapper);
        }

        function removeFile(element) {
            const row = element.closest('.file-input-row');
            if (row) row.remove();
        }

        //Start Autocomplete Search
                                        $(function () {
            $("#EmployeeId").autocomplete({
                source: '/EmployeeSeparation/SearchEmployeess',
                minLength: 1,
                focus: function (event, ui) {
                    $("#EmployeeId").val(ui.item.label);
                    return false;
                },
                select: function (event, ui) {
                    $("#EmployeeId").val(ui.item.value); // sets ID + Name in textbox
                    return false;
                }
            })
            .autocomplete("instance")._renderItem = function (ul, item) {
                var $li = $("<li>");
                var $content = $(
                    "<div style='display:flex; align-items:center; gap:10px;'>" +
                        "<img src='" + item.image + "' style='width:60px; height:60px; border-radius:50%; object-fit:cover;' />" +
                        "<span>" + item.label + "</span>" +
                    "</div>"
                );
                $li.append($content);
                return $li.appendTo(ul);
            };
        });
        //End Autocomplete Search




    </script>

    @* If you use client validation, keep validation scripts *@
    <partial name="_ValidationScriptsPartial" />
}
