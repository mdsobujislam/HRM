@model IEnumerable<HRM.Models.BonusCalculate>
@{
    ViewData["Title"] = "ShowData";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-lg-12">
        <div class="card shadow-sm rounded-3">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">📋 Create Bonus</h5>
            </div>
            <div class="card-body">
                <form asp-action="ShowData" method="post" enctype="multipart/form-data">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Bonus Type</label>
                            <select id="BonusTypeId" name="BonusTypeId" class="form-select select2">
                                <option value="">-- Select Branch --</option>
                                @foreach (var item in (List<SelectListItem>)ViewBag.BonusTypeList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label for="FromDate" class="form-label fw-semibold">From Date</label>
                            <input type="date" id="FromDate" name="FromDate" class="form-control" />
                        </div>
                        <div class="col-md-3">
                            <label for="ToDate" class="form-label fw-semibold">To Date</label>
                            <input type="date" id="ToDate" name="ToDate" class="form-control" />
                        </div>
                    </div>
                    <div class="row g-3 my-1">
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Branch</label>
                            <select id="BranchId" name="BranchId" class="form-select select2">
                                <option value="">-- Select Branch --</option>
                                @foreach (var item in (List<SelectListItem>)ViewBag.BranchList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Department</label>
                            <select id="DepartmentId" name="DepartmentId" class="form-select select2">
                                <option value="">-- Select Department --</option>
                                @foreach (var item in (List<SelectListItem>)ViewBag.DepartmentList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Designation</label>
                            <select id="DesignationId" name="DesignationId" class="form-select select2" required>
                                <option value="">-- Select Designation --</option>
                                @foreach (var item in (List<SelectListItem>)ViewBag.DesignationList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Employee</label>
                            <select id="EmployeeId" name="EmployeeId" class="form-select select2" required>
                                <option value="">-- Select Employee --</option>
                                @foreach (var item in (List<SelectListItem>)ViewBag.EmployeeList)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>



                    <div class="row mt-4">
                        <div class="col-md-12 text-end">
                            <button type="submit" class="btn btn-success px-4">
                                <i class="bi bi-eye"></i> Show
                            </button>
                            <button type="reset" class="btn btn-secondary px-4 ms-2">
                                <i class="bi bi-x-circle"></i> Reset
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<div class="col-md-12">
    <div class="card shadow">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table  datanew">
                    <a asp-action="ExportPdf" asp-route-FromDate="@Model.FirstOrDefault()?.FromDate" asp-route-ToDate="@Model.FirstOrDefault()?.ToDate" class="btn btn-danger">
                        Download PDF
                    </a>
                    <thead class="table-primary">
                        <tr>
                            <th>SL No.</th>
                            <th>Bonus Type</th>
                            <th>Bonus Date</th>
                            <th>Percentage</th>
                            <th>Bonus Amount</th>
                            <th>Employee Name</th>
                            <th>Branch</th>
                            <th>Designation</th>
                            <th>Department</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int index = 0;
                        }
                        @foreach (var item in Model)
                        {
                            index++;
                            <tr>
                                <td>@index</td>
                                <td>@item.BonusType</td>
                                @* <td>@item.BonusDate</td> *@
                                <td>@item.BonusDate.ToString()</td>
                                <td>@item.Percentage</td>
                                @* <td>@item.BonusAmount</td> *@
                                <td class="text-end">@item.BonusAmount.ToString("N2")</td>
                                <td>@item.Employee</td>
                                <td>@item.Branch</td>
                                <td>@item.Designation</td>
                                <td>@item.Department</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


@section Scripts {

    <script>

        $(document).ready(function () {
            // Initially enable all
            $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", false);

            // Function to disable others when one is selected
            function disableOthers(currentId) {
                let selectedValue = $("#" + currentId).val();

                if (selectedValue) {
                    // Disable all others except the current one
                    $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", true);
                    $("#" + currentId).prop("disabled", false);
                } else {
                    // If none selected, enable all again
                    $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", false);
                }
            }

            // Bind change event for all dropdowns
            $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").on("change", function () {
                disableOthers(this.id);
            });
        });





        function submitData(){
        document.getElementById("Id").value = "";
            document.getElementById("BonusTypeId").value ="";
            document.getElementById("BranchId").value ="";
            document.getElementById("DesignationId").value ="";
            document.getElementById("DepartmentId").value ="";
            document.getElementById("EmployeeId").value ="";
            document.getElementById("BonusDate").value = "";
            document.getElementById("Percentage").value = "";
            document.getElementById("Submit").textContent = "Submit";
        }


                function editBranch(id, slotName, branchId,DepartmentId,DesignationId,startHour, startMinute, dutyHour, dutyMinute, endHour, endMinute) {
            document.getElementById("Id").value = id;
            document.getElementById("SlotName").value = slotName;
            document.getElementById("DepartmentId").value =DepartmentId;
            document.getElementById("BranchId").value =branchId;
            document.getElementById("DesignationId").value =DesignationId;
            document.getElementById("StartHour").value = startHour;
            document.getElementById("StartMinute").value = startMinute;
            document.getElementById("DutyHour").value = dutyHour;
            document.getElementById("DutyMinute").value = dutyMinute;
            document.getElementById("EndHour").value = endHour;
            document.getElementById("EndMinute").value = endMinute;

            document.getElementById("addDepartmentModalLabel").textContent = "Edit Duty Slot";
            document.getElementById("modalSubmitText").textContent = "Update";
        }

        document.querySelectorAll('.deleteForm').forEach(function (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This will permanently delete the branch.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });

    </script>

}



