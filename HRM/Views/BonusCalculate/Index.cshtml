@model IEnumerable<HRM.Models.BonusCalculate>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">Create Bonus</div>
            </div>
            <div class="card-body">
                <form asp-action="Insert" method="post" enctype="multipart/form-data">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="row align-items-center">
                                    <label class="col-sm-4 col-form-label">Bonus Type :</label>
                                    <div class="col-sm-8">
                                        <select id="BonusTypeId" name="BonusTypeId" class="form-control select2" required>
                                            <option value="">-- Select Bonus Type --</option>
                                            @foreach (var item in (List<SelectListItem>)ViewBag.BonusTypeList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row align-items-center">
                                    <label class="col-sm-4 col-form-label">Date :</label>
                                    <div class="col-sm-8">
                                        <input type="date" class="form-control" id="BonusDate" name="BonusDate" required>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="row align-items-center">
                                    <label class="col-sm-4 col-form-label">Percentage :</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control" id="Percentage" name="Percentage" required placeholder="Enter Type Percentage">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="row align-items-center">
                                    <label class="col-sm-5 col-form-label">Branch :</label>
                                    <div class="col-sm-7">
                                        <select id="BranchId" name="BranchId" class="form-control select2">
                                            <option value="">-- Select Branch --</option>
                                            @foreach (var item in (List<SelectListItem>)ViewBag.BranchList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="row align-items-center">
                                    <label class="col-sm-5 col-form-label">Department :</label>
                                    <div class="col-sm-7">
                                        <select id="DepartmentId" name="DepartmentId" class="form-control select2">
                                            <option value="">-- Select Department --</option>
                                            @foreach (var item in (List<SelectListItem>)ViewBag.DepartmentList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="row align-items-center">
                                    <label class="col-sm-5 col-form-label">Designation :</label>
                                    <div class="col-sm-7">
                                        <select id="DesignationId" name="DesignationId" class="form-control select2" required>
                                            <option value="">-- Select Designation --</option>
                                            @foreach (var item in (List<SelectListItem>)ViewBag.DesignationList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="row align-items-center">
                                    <label class="col-sm-5 col-form-label">Employee :</label>
                                    <div class="col-sm-7">
                                        <select id="EmployeeId" name="EmployeeId" class="form-control select2" required>
                                            <option value="">-- Select Employee --</option>
                                            @foreach (var item in (List<SelectListItem>)ViewBag.EmployeeList)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-2">
                                <div class="row align-items-center">
                                    <button type="submit" class="btn btn-primary btn-sm px-4">
                                        Submit
                                    </button>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




@section Scripts {

    <script>

        $(document).ready(function () {
            // Initially enable all
            $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", false);

            // Function to disable others when one is selected
            function disableOthers(currentId) {
                let selectedValue = $("#" + currentId).val();

                if (selectedValue) {
                    // Disable all others except the current one
                    $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", true);
                    $("#" + currentId).prop("disabled", false);
                } else {
                    // If none selected, enable all again
                    $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").prop("disabled", false);
                }
            }

            // Bind change event for all dropdowns
            $("#BranchId, #DepartmentId, #DesignationId, #EmployeeId").on("change", function () {
                disableOthers(this.id);
            });
        });





        function submitData(){
        document.getElementById("Id").value = "";
            document.getElementById("BonusTypeId").value ="";
            document.getElementById("BranchId").value ="";
            document.getElementById("DesignationId").value ="";
            document.getElementById("DepartmentId").value ="";
            document.getElementById("EmployeeId").value ="";
            document.getElementById("BonusDate").value = "";
            document.getElementById("Percentage").value = "";
            document.getElementById("Submit").textContent = "Submit";
        }


                function editBranch(id, slotName, branchId,DepartmentId,DesignationId,startHour, startMinute, dutyHour, dutyMinute, endHour, endMinute) {
            document.getElementById("Id").value = id;
            document.getElementById("SlotName").value = slotName;
            document.getElementById("DepartmentId").value =DepartmentId;
            document.getElementById("BranchId").value =branchId;
            document.getElementById("DesignationId").value =DesignationId;
            document.getElementById("StartHour").value = startHour;
            document.getElementById("StartMinute").value = startMinute;
            document.getElementById("DutyHour").value = dutyHour;
            document.getElementById("DutyMinute").value = dutyMinute;
            document.getElementById("EndHour").value = endHour;
            document.getElementById("EndMinute").value = endMinute;

            document.getElementById("addDepartmentModalLabel").textContent = "Edit Duty Slot";
            document.getElementById("modalSubmitText").textContent = "Update";
        }

        document.querySelectorAll('.deleteForm').forEach(function (form) {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This will permanently delete the branch.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });

    </script>

}

